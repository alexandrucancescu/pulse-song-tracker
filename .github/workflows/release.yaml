name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Print build info
        run: |
          echo "Workdir:"
          ls -la .
          echo "Dist:"
          ls -la dist

      - name: Check if version has changed
        id: check_version
        uses: EndBug/version-check@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          diff-search: true  # Enable searching within commits

      - name: Log when changed
        if: steps.check_version.outputs.changed == 'true'
        run: 'echo "Version change found in commit ${{ steps.check_version.outputs.commit }}! New version: ${{ steps.check_version.outputs.version }} (${{ steps.check_version.outputs.type }})"'

      - name: Log when unchanged
        if: steps.check_version.outputs.changed == 'false'
        run: 'echo "No version change, skip release! Version: ${{ steps.check_version.outputs.version }}"'

      - name: Zip the Build
        if: steps.check_version.outputs.changed == 'true'
        run: zip -r pulse-song-tracker-v${{steps.check_version.outputs.version}}.zip ./dist/**/*.js package.json package-lock.json

      - name: Create Release
        if: steps.check_version.outputs.changed == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.check_version.outputs.version }}
          release_name: Release v${{ steps.check_version.outputs.version }}
          body: Release v${{ steps.check_version.outputs.version }}
          draft: false
          prerelease: false


      - name: Upload Release Asset
        if: steps.check_version.outputs.changed == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pulse-song-tracker-v${{steps.check_version.outputs.version}}.zip
          asset_name: pulse-song-tracker-v${{steps.check_version.outputs.version}}.zip
          asset_content_type: application/zip